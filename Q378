class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        
        // put the entire first row in the priority queue
        // then pull the smallest one by one until we find the value we are looking for
        PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) -> matrix[a[0]][a[1]] - matrix[b[0]][b[1]]);
        
        for (int i = 0; i < matrix[0].length; i++) {
            pq.offer(new int[]{0, i});
        }
        
        for (int i = 1; i < k; i++) {
            int[] curr = pq.poll();
            
            if (curr[0] + 1 == matrix.length)
                continue;
            
            pq.offer(new int[]{curr[0] + 1, curr[1]});
        }
        
        int[] tmp = pq.poll();
        return matrix[tmp[0]][tmp[1]];
    }
}