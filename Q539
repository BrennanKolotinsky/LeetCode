class Solution {
    public int findMinDifference(List<String> timePoints) {
        
        boolean[] timeRange = new boolean[24 * 60];
        
        for (String t : timePoints) {
            String hrs = t.substring(0, 2);
            String mins = t.substring(3, 5);
            
            int time = Integer.parseInt(hrs) * 60 + Integer.parseInt(mins);
            
            if (timeRange[time])
                return 0; // found a duplicate time (therefore answer is zero!)
            timeRange[time] = true;
        }
        
        int min = Integer.MAX_VALUE;
        int first = -1;
        int prev = -1;
        
        for (int i = 0; i < 60 * 24; i++) {
            if (timeRange[i]) {
                if (first == -1) {
                    first = i;
                    prev = i;
                } else {
                    min = Math.min(min, i - prev);
                    prev = i;
                }
            }
        }
        
        min = Math.min(min, 24 * 60 - prev + first); // this is the edge corner. First value we find we will compare to the last -- ex. take 60 seconds. 57, 4. We would take 60 - 57 + 4
        
        return min;
    }
}