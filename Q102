/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        ArrayList<List<Integer>> sol = new ArrayList<List<Integer>>();
        
        if (root == null) return sol;
        
        // add the first level
        ArrayList newLevel = new ArrayList();
        newLevel.add(root.val);
        sol.add(newLevel);
        
        helper(root.left, sol, 1);
        helper(root.right, sol, 1);
        
        return sol;
    }
    
    public void helper(TreeNode node, ArrayList<List<Integer>> sol, int level) {
        if (node == null) return;
        // if the level is greater than the solution size, create a new level for the solution
        if (level >= sol.size()) {
            List newLevel = new ArrayList();
            newLevel.add(node.val);
            sol.add(newLevel);
        } else {
            List curr = sol.get(level); 
            curr.add(node.val); 
        }
        
        level++;
        helper(node.left, sol, level);
        helper(node.right, sol, level);
        
    }
}