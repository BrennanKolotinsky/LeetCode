/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        
        if (root == null) return 0;
        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        int depth = 0;
        queue.offer(root);
        
        while (queue.size() != 0) {
            depth++;
            
            int size = queue.size();
            
            for (int i = 0; i < size; i++) {
                
                TreeNode curr = queue.poll();
                
                if (curr.left == null && curr.right == null) {
                    return depth;
                } else if (curr.left == null) {
                    queue.offer(curr.right);
                } else if (curr.right == null) {
                    queue.offer(curr.left);
                } else {
                    queue.offer(curr.right);
                    queue.offer(curr.left);
                }
            }
        }
        
        return depth;
    }
}