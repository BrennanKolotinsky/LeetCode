public class Solution {
    public int coinChange(int[] coins, int amount) {
        
        int[] dp = new int[amount + 1];
        Arrays.fill(dp, 10000);
        dp[0] = 0;
        
        for (int i = 1; i <= amount; i++)
            for (int coin : coins)
                
                if (coin == i)    
                    dp[i] = 1;
                // can you use this specific coin to get to this amount? If there was an amount before that allowed it, add it to the dynamic programming
                else if (i - coin > 0 && dp[i - coin] != 10000)
                    dp[i] = Math.min(dp[i - coin] + 1, dp[i]);
    
        return dp[amount] == 10000 ? -1 : dp[amount];
    }
}