class Solution {
    public List<Integer> lexicalOrder(int n) {
        List<Integer> sol = new ArrayList<>();
        dfs(sol, n, 0); 
        return sol;
    }
    
    public void dfs(List<Integer> sol, int n, int curr) {
        // add numbers that aren't zero
        if (curr != 0)
            sol.add(curr);
        
        for (int i = 0; i < 10; i++) {
            // skip endlessly adding zeros
            if (curr == 0 && i == 0)
                continue;
            
            if (curr * 10 + i > n)
                break;
            
            dfs(sol, n, curr * 10 + i);
        }        
    }
}