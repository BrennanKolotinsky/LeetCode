/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if (head == null) return null;
        
        ListNode tmp = head;
        int cnt = 0;
        while (tmp != null) {
            tmp = tmp.next;
            cnt++;
        }
        
        if (k > cnt) {
            k = k % cnt;
        }
        
        if (k == cnt || k == 0) return head;
        
        if (k < cnt) {
            tmp = head;
            
            // 1->2->3->4->5 k = 2;
            for (int i = 0; i < cnt - k - 1; i++) {
                tmp = tmp.next;
            }
            
            // tmp = 3->4->5
            
            ListNode tmp2 = tmp.next; // tmp2 = 4->5
            ListNode tmpHead = tmp2; // tmpHead = 4->5
            
            tmp.next = null; // head = 1->2->3->null, tmpHead = 4->5
            
            while (tmp2.next != null) {
                tmp2 = tmp2.next;
            }
            
            // tmp2 = 5
            tmp2.next = head; // tmp2 = 5->1->2->3
            return tmpHead; // tmpHead = 4->5->1->2->3
        }
        
        return head;        
    }
}