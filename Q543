/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        if (root == null) return 0;
        
        // consider if the highest point is on the left OR the right as the top
        return Math.max(helper(0, root.left) + helper(0, root.right), Math.max(diameterOfBinaryTree(root.left), diameterOfBinaryTree(root.right)));
    }
    
    private int helper(int depth, TreeNode root) {
        if (root == null) return depth;
        
        return Math.max(helper(depth + 1, root.left), helper(depth + 1, root.right));
    }
}