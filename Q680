class Solution {
    
    // GREEDY ALGORITHM
    public boolean validPalindrome(String s) {
        
        int end = s.length() - 1, start = 0;
        
        while (end >= start) {
            // check if there is still a palindrome for odd or even -- if we already found one bad occurence -- check both cases by considering ignoring the left character AND ignoring the right character. If either work we can still make a valid palindrome!
            if (s.charAt(start) != s.charAt(end))
                return isPalindrome(s, start + 1, end) 
                    || isPalindrome(s, start, end - 1);      
            
            start++;
            end--;
        }
        
        return true;
    }
    
    boolean isPalindrome(String s, int start, int end) {
        while (end >= start) {
            if (s.charAt(start) != s.charAt(end))
                return false;      
            start++;
            end--;
        }
        
        return true;
    }
}