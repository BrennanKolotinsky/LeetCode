class Solution {
    public boolean canReach(int[] arr, int start) {
        
        if (arr.length == 0)
            return true;
        
        int[] visited = new int[arr.length];
        
        return helper(arr, start, visited, 0);
    }
    
    public boolean helper(int[] arr, int curr, int[] visited, int totalVisited) {
        
        visited[curr] = 1;
        if (0 == arr[curr])
            return true;
        
        boolean fnd = false;
        
        if (curr - arr[curr] >= 0 && visited[curr - arr[curr]] == 0)
            fnd = helper(arr, curr - arr[curr], visited, totalVisited);
        
        // if we found on the left path, then let's return true -- else let's check on the right path
        if (fnd)
            return true;
        
        if (curr + arr[curr] < arr.length && visited[curr + arr[curr]] == 0)
            fnd = helper(arr, curr + arr[curr], visited, totalVisited);
        
        visited[curr] = 0;
        
        return fnd;
    }
}