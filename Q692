class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        HashMap<String, Integer> map = new HashMap<String, Integer>();
        
        for (String word : words) {
            map.put(word, map.getOrDefault(word, 0) + 1);
        }
        
        PriorityQueue<String> pq = new PriorityQueue<>(
            (a,b) -> map.get(a) != map.get(b) ? map.get(b) - map.get(a) : a.compareTo(b)
        );
        
        for (String word : map.keySet()) {
            pq.offer(word);
        }
        
        List<String> sol = new ArrayList<>();
        
        while (k > 0) {
            sol.add(pq.poll());
            k--;
        }
                
        return sol;
    }
}