/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        ArrayList<String> sol = new ArrayList<String>();
        
        if (root == null) {
            return sol;
        }
        
        if (root.left == null && root.right == null) {
            String a = String.valueOf(root.val);
            sol.add(a);
            return sol;
        }
        
        if (root.left != null) {
            String currSol = String.valueOf(root.val) + "->";
            helper(root.left, sol, currSol);
        }
        
        if (root.right != null) {
            String currSol = String.valueOf(root.val) + "->";
            helper(root.right, sol, currSol);
        }
        
        
        return sol;
    }
    
    public void helper(TreeNode root, List<String> sol, String currSol) {
        if (root.left == null && root.right == null) {
            currSol += String.valueOf(root.val);
            sol.add(currSol);
            return;
        }
        
        if (root.left != null) {
            String newSol = currSol + String.valueOf(root.val) + "->";
            helper(root.left, sol, newSol);
        }
        
        if (root.right != null) {
            String newSol = currSol + String.valueOf(root.val) + "->";
            helper(root.right, sol, newSol);
        }
        
        
        return;
    }
}