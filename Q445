/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> st1 = new Stack<Integer>();
        Stack<Integer> st2 = new Stack<Integer>();
        
        while (l1 != null) {
            st1.push(l1.val);
            l1 = l1.next;
        }
        
        while (l2 != null) {
            st2.push(l2.val);
            l2 = l2.next;
        }
        
        int carry = 0;
        int val = 0;
        
        ListNode solHead = null, tmpSol = solHead;
        
        while (st2.empty() == false && st1.empty() == false) {
            val = st1.pop() + st2.pop() + carry;
            carry = val / 10; // if its over 10, you'll get one
            
            tmpSol = new ListNode(val % 10);
            tmpSol.next = solHead;
            solHead = tmpSol;
        }
        
        if (st2.empty() == true && st1.empty() == false) {
            while (st1.empty() == false) {
                val = st1.pop() + carry;
                carry = val / 10;
                
                tmpSol = new ListNode(val % 10);
                tmpSol.next = solHead;
                solHead = tmpSol;
            }
        }
        
        if (st2.empty() == false && st1.empty() == true) {
            while (st2.empty() == false) {
                val = st2.pop() + carry;
                carry = val / 10;
                
                tmpSol = new ListNode(val % 10);
                tmpSol.next = solHead;
                solHead = tmpSol;
            }
        }
        
        if (carry == 1) {
            tmpSol = new ListNode(1);
            tmpSol.next = solHead;
            solHead = tmpSol;
        }
        
        return solHead;
    }
}