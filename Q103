/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    
        List<List<Integer>> sol = new ArrayList<>();
        
        if (root == null) return sol;
        
        Deque<TreeNode> q = new LinkedList<>();
        q.offer(root);
        int depth = 0;
        
        while(!q.isEmpty()) {
            
            int len = q.size();
            List<Integer> tmp = new ArrayList<>();
            
            for (int i = 0; i < len; i++) {
                
                TreeNode curr = q.pop();
                
                if (depth % 2 == 0)
                    tmp.add(curr.val);
                else
                    tmp.add(0, curr.val);

                if (curr.left != null)
                    q.offer(curr.left);
                if (curr.right != null)
                    q.offer(curr.right);
            }
            
            sol.add(tmp);
            depth++;
        }
        
        return sol;
    }
}