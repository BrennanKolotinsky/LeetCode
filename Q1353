class Solution {
    public int maxEvents(int[][] events) {

        Arrays.sort(events, (a,b)->a[0]-b[0]);
        PriorityQueue<Integer> pq = new PriorityQueue<>(); // these will hold the nearest ending!
                
        int maxEvents = 0, currInd = 0;
        for (int i = events[0][0]; i <= 100000; i++) {
            while (currInd < events.length && events[currInd][0] == i)
                pq.offer(events[currInd++][1]);
            
            while (!pq.isEmpty() && pq.peek() < i)
                pq.poll();
            
            if (!pq.isEmpty()) {
                maxEvents++;
                pq.poll();
            }
                
        }
        
        return maxEvents;
    }
}