/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        
        int maxDepth = helper(root, 1, map);
        
        int max = Integer.MIN_VALUE;
        int depth = 0;
        
        for (int i = 1; i < maxDepth; i++) {
            if (map.get(i) > max) {
                max = map.get(i);
                depth = i;
            }
            
        }
        
        return depth;
    }
    
    public int helper(TreeNode root, int depth, HashMap<Integer, Integer> map) {
        if (root == null) return depth;
        
        if (depth > map.size()) {
            map.put(depth, root.val);
        } else {
            int curr = map.get(depth);
            map.put(depth, curr + root.val);
        }
        
        return Math.max(helper(root.left, depth + 1, map), helper(root.right, depth + 1, map));
    }
}