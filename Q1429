class FirstUnique {
    
    Queue<Integer> q;
    Map<Integer, Integer> map;

    public FirstUnique(int[] nums) {
        // PRIORITY QUEUE, HASHMAP
        q = new LinkedList<Integer>();
        map = new HashMap<Integer, Integer>();
        
        for (int n : nums) {
            if (map.containsKey(n)) {
                map.put(n, map.get(n) + 1);
            } else {
                q.offer(n);
                map.put(n, 1);
            }
        }   
    }
    
    public int showFirstUnique() {
        while (!q.isEmpty()) {
            if (map.get(q.peek()) > 1)
                q.poll();
            else
                return q.peek();
        }
        
        return -1;
    }
    
    public void add(int value) {
        if (map.containsKey(value)) {
            map.put(value, map.get(value) + 1);
        } else {
            q.offer(value);
            map.put(value, 1);
        }
    }
}

/**
 * Your FirstUnique object will be instantiated and called as such:
 * FirstUnique obj = new FirstUnique(nums);
 * int param_1 = obj.showFirstUnique();
 * obj.add(value);
 */